#include <ESP8266WiFi.h>

// Define the WiFi credentials
const char* ssid = "your_SSID"; 
const char* password = "your_PASSWORD"; 

// Define GPIO pins for LEDs
const int ledPin1 = 12; 
const int ledPin2 = 14; 

WiFiServer server(80); // Web server runs on port 80

void setup() {
  Serial.begin(115200);
  
  // Set LED pins as OUTPUT
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  server.begin(); // Start the server
}

void loop() {
  WiFiClient client = server.available(); // Check for incoming client requests

  if (client) {
    String currentLine = ""; 
    while (client.connected()) {
      if (client.available()) {
        char c = client.read(); 
        Serial.write(c); // Debugging: view the client's request
        if (c == '\n') {
          if (currentLine.length() == 0) {
            // Send HTTP response header
            client.println("HTTP/1.1 200 OK");
            client.println("Content-Type: text/html");
            client.println("Connection: close");
            client.println();
            client.println("<!DOCTYPE HTML>");
            client.println("<html>");

            // Web page to control LEDs
            client.println("<h1>Arduino Web Server</h1>");
            client.println("<p>LED 1: <a href=\"/led1/on\"><button>ON</button></a> <a href=\"/led1/off\"><button>OFF</button></a></p>");
            client.println("<p>LED 2: <a href=\"/led2/on\"><button>ON</button></a> <a href=\"/led2/off\"><button>OFF</button></a></p>");
            client.println("</html>");
            break;
          } else {
            currentLine = "";
          }
        } else if (c != '\r') {
          currentLine += c;
        }

        // Check if LED control buttons are pressed
        if (currentLine.endsWith("GET /led1/on")) {
          digitalWrite(ledPin1, HIGH); // Turn LED 1 ON
        } 
        if (currentLine.endsWith("GET /led1/off")) {
          digitalWrite(ledPin1, LOW); // Turn LED 1 OFF
        }
        if (currentLine.endsWith("GET /led2/on")) {
          digitalWrite(ledPin2, HIGH); // Turn LED 2 ON
        }
        if (currentLine.endsWith("GET /led2/off")) {
          digitalWrite(ledPin2, LOW); // Turn LED 2 OFF
        }
      }
    }
    client.stop(); // Close the connection
  }
}
